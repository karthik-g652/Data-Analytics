<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.1atew740i7wsoj1c708lc1i813l1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.1y3i3bf0yv71qp1el20ay1t6jb43'>
            <connection class='semistructpassivestore-direct' directory='K:/Programming/Data Analytics' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1y3i3bf0yv71qp1el20ay1t6jb43' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_1717560342874681344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/naras/AppData/Local/Temp/TableauTemp/#TableauTemp_0272ive1f5rd6r1h22qxi0s4ozpt.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/21/2025 06:16:22 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6244</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_0D90BAEEEF0F4BB4B7288DFBD3BAE17B'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1y3i3bf0yv71qp1el20ay1t6jb43' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_BAC35C8E1B7A4ABFB3F55EB08AFB30B4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1atew740i7wsoj1c708lc1i813l1' />
          </datasources>
          <datasource-dependencies datasource='federated.1atew740i7wsoj1c708lc1i813l1'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1717560342874681344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1717560342874681344]' derivation='Sum' name='[sum:Calculation_1717560342874681344:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1atew740i7wsoj1c708lc1i813l1].[none:factory:nk]' value='26' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1atew740i7wsoj1c708lc1i813l1].[sum:Calculation_1717560342874681344:qk]</rows>
        <cols>[federated.1atew740i7wsoj1c708lc1i813l1].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{48A59AFB-22FB-45DD-8B0B-5BFFA3B616D6}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1atew740i7wsoj1c708lc1i813l1' />
          </datasources>
          <datasource-dependencies datasource='federated.1atew740i7wsoj1c708lc1i813l1'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1717560342874681344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1717560342874681344]' derivation='Sum' name='[sum:Calculation_1717560342874681344:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1atew740i7wsoj1c708lc1i813l1].[Action (Factory)]'>
            <groupfilter function='member' level='[factory]' member='&quot;daikibo-factory-seiko&quot;' user:ui-action-filter='[Action1_BAC35C8E1B7A4ABFB3F55EB08AFB30B4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1atew740i7wsoj1c708lc1i813l1].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1atew740i7wsoj1c708lc1i813l1].[sum:Calculation_1717560342874681344:qk]</rows>
        <cols>[federated.1atew740i7wsoj1c708lc1i813l1].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{76F4A6E7-68D4-41DC-9407-8003A0C5F746}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49069' id='3' name='Sheet 1' w='97538' x='1231' y='930'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49071' id='5' name='Sheet 2' w='97538' x='1231' y='49999'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='8' param='vert' type-v2='layout-flow' w='97538' x='1231' y='930'>
                <zone fixed-size='280' h='49069' id='3' is-fixed='true' name='Sheet 1' w='97538' x='1231' y='930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='5' is-fixed='true' name='Sheet 2' w='97538' x='1231' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AFE36E60-FFA4-45B7-A5B1-0F3FBCA5CB18}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C0F30582-E22E-4709-A662-EA48939F7567}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{35E0D1AF-EA6D-4B72-B317-3B1FDAE7709A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{2436840A-6606-434E-B6A7-0AAD1F64AC8B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      cwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      mo0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
